name: Quality checks 👌🧪

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - "**/*.md"
  workflow_dispatch:

jobs:
  dependency-review:
    name: Vulnerable dependencies 🔎
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        with:
          show-progress: false

      - name: Scan
        uses: actions/dependency-review-action@v3.1.4

  lint_frontend:
    name: Lint (frontend) 🔬
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4.1.1
        with:
          show-progress: false

      - name: Setup node environment ⚙️
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 20
          check-latest: true

      - name: Install dependencies 📦
        run: npm ci --no-audit

      - name: Run linter ✏️
        run: npm run lint

  typecheck_frontend:
    name: Typecheck (frontend) 🈯
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4.1.1
        with:
          show-progress: false

      - name: Setup node environment ⚙️
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 20
          check-latest: true

      - name: Install dependencies 📦
        run: npm ci --no-audit

      - name: Run typecheck 📖
        run: npm run typecheck

  build_frontend:
    name: Build (frontend) 🏗️
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4.1.1
        with:
          show-progress: false

      - name: Setup node environment ⚙️
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 20
          check-latest: true

      - name: Install dependencies 📦
        run: npm ci --no-audit

      - name: Run build ⚒️
        run: npm run build

  conventional_commits:
    name: Conventional commits check 💬
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4.1.1
        with:
          show-progress: false

      - name: Check if all commits comply with the specification
        uses: webiny/action-conventional-commits@v1.2.0
  
  run_backend:
    name: Run backend 🏃‍♂️
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4.1.1
        with:
          show-progress: false

      - name: Setup Python 🐍
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.x'
          check-latest: true

      - name: Install dependencies 📦
        run: pip install -r requirements.txt

      - name: Perform migrations 🗃️
        run: python ./manage.py migrate

      - name: Run Django Server 🏃‍♂️
        run: |
          python manage.py runserver &
          sleep 10 # Espera a que el servidor esté listo

      - name: Check server 🩺
        run: |
          curl -I http://127.0.0.1:8000/
          sudo pkill python

  test_backend:
    name: Test backend 🔍
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4.1.1
        with:
          show-progress: false

      - name: Setup Python 🐍
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.x'
          check-latest: true

      - name: Install dependencies 📦
        run: pip install -r requirements.txt

      - name: Perform tests ⚒️
        run: python ./manage.py test

  build:
    name: Build Docker image 📦
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4.1.1
        with:
          show-progress: false

      - name: Configure QEMU ⚙️
        uses: docker/setup-qemu-action@v3.0.0

      - name: Configure Docker Buildx ⚙️
        uses: docker/setup-buildx-action@v3.0.0

      - name: Build Docker images 🛠️
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          load: true
          tags: |
            traineerbook

      - name: Extract Docker image for artifact publishing 📦
        run: |
          docker save traineerbook > docker_image.tar.gz

      - name: Upload artifact (Docker image) ⬆️📦
        uses: actions/upload-artifact@v4.0.0
        with:
          name: docker_image
          path: |
            docker_image.tar.gz
